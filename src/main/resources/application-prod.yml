spring:
  application:
    name: notification-service

  # Database Configuration
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/notification_db}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-timeout: 30000

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false

  # Redis Configuration
  redis:
    host: ${SPRING_REDIS_HOST:redis}
    port: ${SPRING_REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:redis}
    timeout: 2000
    lettuce:
      pool:
        max-active: 16
        max-idle: 8
        min-idle: 4
        max-wait: 1000ms
      shutdown-timeout: 200ms
    connect-timeout: 1000
    client-name: notification-service

  # RabbitMQ Configuration
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:rabbitmq}
    port: ${SPRING_RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    listener:
      simple:
        concurrency: 5
        max-concurrency: 10
        prefetch: 5
        default-requeue-rejected: false

# JWT Configuration
jwt:
  expiration: ${JWT_EXPIRATION:86400000}  # 24 hours in milliseconds

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  tomcat:
    max-threads: 200
    min-spare-threads: 20
    accept-count: 100
    max-connections: 10000
    connection-timeout: 20000

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      notificationService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 5s
        failureRateThreshold: 50

  retry:
    instances:
      notificationService:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when_authorized
      show-components: when_authorized
      group:
        liveness:
          include: ping,diskSpace
        readiness:
          include: db,redis,rabbitmq

# Logging Configuration
logging:
  level:
    root: ${LOGGING_LEVEL_ROOT:INFO}
    com.notification: ${LOGGING_LEVEL_COM_NOTIFICATION:INFO}
    org.springframework.web: INFO
    org.hibernate: WARN
    org.springframework.security: INFO
    AUDIT_LOG: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:/var/log/notification-service.log}
    max-size: 100MB
    max-history: 30

# Audit Logging Configuration  
audit:
  enabled: true
  log-to-file: true
  secure-log-file: ${AUDIT_LOG_FILE:/var/log/notification-service-audit.log}
  log-to-database: false
  max-history-days: 90 